package com.springstudy.shop;

import java.util.ArrayList;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.springstudy.shop.domain.SampleDTO;
import com.springstudy.shop.domain.SampleDTOList;
import com.springstudy.shop.domain.TodoDTO;

import lombok.extern.log4j.Log4j;

@Controller
@RequestMapping("/sample")
@Log4j
public class SampleController {

	private static final Logger logger = LoggerFactory.getLogger(SampleController.class);
	
	@RequestMapping("/star")
	public void basic() {
		logger.info("basic1.................");
		log.info("basic2.................");
	}
	
	@RequestMapping("/craft")
	public void basic1() {
		logger.info("basic3.................");
		log.info("basic4.................");
	}
	
	@RequestMapping(value = "/basic", method = {RequestMethod.GET, RequestMethod.POST})
	public void basicGet() {
		logger.info("basicGet1.................");
		log.info("basicGet2....................");
	}
	
	//get방식으로 사용됨
	@RequestMapping(value = "/basic1", method = {RequestMethod.GET, RequestMethod.POST})
	public void basicPost() {
		logger.info("basicPost1.................");
		log.info("basicPost2....................");
	}
	
	@RequestMapping(value = "/basic1", method = RequestMethod.GET)
	public void basicGet2() {
		logger.info("basicGet3.................");
		log.info("basicGet4....................");
	}
	//메소드 없을땐 GET방식
	@RequestMapping("/basicOnlyGet")
	public void basicGet3() {
		logger.info("basic get only Get5.................");
		log.info("basic get only Get6....................");
	}
	
	@RequestMapping("/basicOnlyGet1")
	public void basicPost2() {
		logger.info("basic get only Post3.................");
		log.info("basic get only Post4....................");
	}
	
//	@RequestMapping("/ex01")
//	public String ex01(SampleDTO sDto) {
//		logger.info(sDto.getName());
//		logger.info("" + sDto.getAge());
//		logger.info(sDto.toString());  //인포 사용할때 ""사용(문자열로)
//		log.info("" +sDto);
//		return "ex01";
//	}
	
	@RequestMapping("/ex02")
	public String ex02(@RequestParam("name") String superName,
					   @RequestParam("age") int superAge) {
		log.info("superName :" + superName);
		log.info("superAge :" + (superAge + 1));
		SampleDTO sDto = new SampleDTO();
		sDto.setSuperName(superName);
		sDto.setAge(superAge);
		log.info(sDto.toString());
		return "ex02";
	}
	
	@GetMapping("/ex02List")
	public String ex02List(@RequestParam("ids") ArrayList<String> ids) {
		log.info("ids : " + ids);
		
		for(String id : ids) {
			log.info("ids : " + id);
		}
		return "ex02List";
	}
	
	@GetMapping("/ex02Bean")
	public String ex02Bean(SampleDTOList list) {
		log.info("list dtos : "+ list);
		
		return "ex02Bean";
	}
	
	@GetMapping("/ex03")
	public String ex03(TodoDTO todo) {
		log.info("todo : " + todo);
		return "ex03";
	}
	
//	@InitBinder
//	public void initBinder(WebDataBinder binder) {
//		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
//		binder.registerCustomEditor(java.util.Date.class, new CustomDateEditor(dateFormat, false));
//	}
	
	@RequestMapping("/sampleModel")
	public String sampleModel(SampleDTO sampleDTO, Model model) {
//		SampleDTO sampleDTO = new SampleDTO("홍길동", 10);   //가상
		
		log.info("sampleModel");
		//기초자료형은 이렇게 못뽑아온다
		//개체자료형만 가능
		model.addAttribute(sampleDTO);   //sample.jsp의 ${sampleDTO}
		
		return "/sample/sample";
	}
	
	@GetMapping("/ex04")
	public String ex04(SampleDTO sampleDTO,@ModelAttribute("page") int page) {
		//@ModelAttribute("page")를 사용하면 기초자료형도 받아올수있다.,
		log.info("sampleDTO : " +sampleDTO);
		log.info("page : "+ page);
		
		return "/sample/ex04";	
	}
	
	@GetMapping(value = "/doE")
	public String doE(RedirectAttributes rttr) {
		log.info("doE 호출되지만 / doF로 리다이렉트...");
		
		rttr.addFlashAttribute("msg","리다이렉트된 메세지 입니다."); //메세지를 담아서 한번만 뿌려준다.
		
		return "redirect:/sample/doF";
	}
	
	@RequestMapping("/doF")
	public String doF() {
		log.info("doF 호출 됨..............");
		
		return "/sample/redirectAttributes";  //요 jsp로 넘어간다.
	}
	
	//void로 했을경우
	@RequestMapping("/ex05")
	public void ex05() {
		log.info("/ex05..................");
		
	}
	
}
