package shop.awesomejump.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;

import shop.awesomejump.domain.CategoryDTO;
import shop.awesomejump.domain.ProductDTO;
import shop.awesomejump.domain.ProductOptionDTO;
import shop.awesomejump.service.ICategoryDAO;
import shop.awesomejump.service.ICategoryProductDAO;
import shop.awesomejump.service.IMemDetailProductDAO;
import shop.awesomejump.service.IProductDAO;

@Controller
public class MemCategoryController {

	 @Inject 
	 private ICategoryDAO categoryDao;
	 @Autowired 
	 private ICategoryProductDAO categoryproductDao;
	 
	 @Autowired
	 private IMemDetailProductDAO memdetailproductDao;
	 
	 
	 @Autowired
	 private IProductDAO productdao;
      /*
       * @GetMapping("/category") public String categoryList(Model model) {
       * 
       * return "/awesomejump/category"; }
       */
    

   @GetMapping("/category")
   public String categoryProductList(Model model) throws Exception {
       List<CategoryDTO> category = null;
       category = categoryDao.category();
       
       // 카테고리에 해당하는 상품 목록만 추출
       List<ProductDTO> product = null;
	   product = categoryproductDao.categoryAndProduct();
	   System.out.println("categoryProductList(product) ===> 모델에 담기 전"+ product);
	   
       
       model.addAttribute("category", category);
       model.addAttribute("product", product);
       System.out.println(category);
       System.out.println("categoryProductList(product) ===> 모델에 담은 후"+product);
       return "/awesomejump/category";
   }
 
   
   
   @GetMapping("/categoryMain")
   public String categoryMain(Model model, @RequestParam("category_main") int category_main) throws Exception {
	   List<CategoryDTO> category = null;
	   category = categoryDao.category();
	   
	   List<ProductDTO> product = null;
	   product = categoryproductDao.categoryAndProduct();
	   System.out.println("categoryMain(product) ===> 모델에 담기 전"+ product);
	   
	   List<ProductDTO> mainProduct = null; 
	   mainProduct =
			   categoryproductDao.categoryMainProduct(category_main);
	   
	   System.out.println("categoryMain (category_main) 모델에 담기 전 ===> "+category_main);
	   
	   System.out.println("categoryMain(mainProduct) 모델에 담기 전  ===>  "+mainProduct);
	   
	   model.addAttribute("category", category);
	   model.addAttribute("product", product);
	   model.addAttribute("mainProduct", mainProduct); 
	   
	   System.out.println(category);
	   System.out.println("categoryMain(product) ===> 모델에 담은 후"+product);
	   return "/awesomejump/categoryMain";
   }
   
   
   @GetMapping("/categoryMid")
   public String categoryMid(Model model, @RequestParam("category_mid") int category_mid) throws Exception {
	   List<CategoryDTO> category = null;
	   category = categoryDao.category();
	   
	   List<ProductDTO> product = null;
	   product = categoryproductDao.categoryAndProduct();
	   System.out.println("categoryMid(product) ===> 모델에 담기 전"+ product);
	   
	   List<ProductDTO> midProduct = null; 
	   midProduct =
			   categoryproductDao.categoryMidProduct(category_mid);

	   System.out.println("categoryMid(category_mid) ===> 모델에 담기 전  "+category_mid);
	   
	   System.out.println("모델에 담기 전  mainProduct "+midProduct);
	   
	   model.addAttribute("category", category);
	   model.addAttribute("product", product);
	   model.addAttribute("midProduct", midProduct); 
	   
	   System.out.println(category);
	   System.out.println("categoryMid(product) ===> 모델에 담은 후 "+product);
	   return "/awesomejump/categoryMid";
   }
   
   
   
   @GetMapping("/categorySub")
   public String categorySub(Model model, @RequestParam("category_sub") int category_sub) throws Exception {
	   List<CategoryDTO> category = null;
	   category = categoryDao.category();
	   
	   List<ProductDTO> product = null;
	   product = categoryproductDao.categoryAndProduct();
	   System.out.println("categorySub(product) ===> 모델에 담기 전"+ product);
	   
	   List<ProductDTO> subProduct = null; 
	   subProduct =
			   categoryproductDao.categorySubProduct(category_sub);
	   
	   System.out.println("categorySub(category_main) 모델에 담기 전 ===>  "+category_sub);
	   
	   System.out.println("모델에 담기 전  mainProduct "+subProduct);
	   
	   model.addAttribute("category", category);
	   model.addAttribute("product", product);
	   model.addAttribute("subProduct", subProduct); 
	   
	   System.out.println(category);
	   System.out.println("categorySub(product) ===> 모델에 담은 후 "+product);
	   return "/awesomejump/categorySub";
   }
   
   
   
   
   @GetMapping("/memDetailProduct")
   public String memDetailProduct(Model model, @RequestParam("product_no") int product_no) throws Exception {
	   List<CategoryDTO> category = null;
	   category = categoryDao.category();
	   
	   System.out.println("--------------memdetailproduct product_no ===>>" + product_no);
	   
	   ProductDTO mainProduct = memdetailproductDao.memDetail(product_no);
	   
	   List<ProductOptionDTO> productOption = null;
	   productOption = productdao.selectProductOption(product_no);
	   
	   
	   System.out.println("memDetailProduct( productOption) 모델에 담기 전  ===> "+productOption);
	   System.out.println("memDetailProduct( mainProduct) 모델에 담기 전  ===> "+mainProduct);
	   
	   model.addAttribute("category", category);
	   model.addAttribute("mainProduct", mainProduct); 
	   model.addAttribute("productOption", productOption);
	   
	   System.out.println(category);
	   System.out.println("memDetailProduct (productOption)  ===> 모델에 담은 후"+productOption);
	   System.out.println("memDetailProduct (mainProduct)  ===> 모델에 담은 후"+mainProduct);
	   return "/awesomejump/memDetailProduct";
   }
   
   
   
   
}