package shop.awesomejump.config.webSocket;

import java.util.ArrayList;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.socket.CloseStatus;
import org.springframework.web.socket.TextMessage;
import org.springframework.web.socket.WebSocketSession;
import org.springframework.web.socket.handler.TextWebSocketHandler;

@RequestMapping("/echo")
public class EchoHandler extends TextWebSocketHandler{

	private List<WebSocketSession> sessionList = new ArrayList<WebSocketSession>();
	
	  private static Logger logger = LoggerFactory.getLogger(EchoHandler.class);
	  
		@Override
		public void afterConnectionEstablished(WebSocketSession session) throws Exception {
			sessionList.add(session);
			logger.info("{} 연결됨", session.getId());
		}
		
		@Override
		protected void handleTextMessage(WebSocketSession session, TextMessage message) throws Exception {
			logger.info("{}로 부터 {} 받음", session.getId(), message.getPayload());
			String msg = message.getPayload();
			String user = "";
			int idx1 = message.getPayload().indexOf(":");
			int idx2 = message.getPayload().indexOf(":",4);
			//System.out.println(idx1);
			//System.out.println(idx2);
			
			if(idx1 > 0) {
				System.out.println("사용자닉네임 --> " + msg.substring(idx1+1,idx2));
				user = msg.substring(idx1+1,idx2);
			}
			
			for(WebSocketSession sess: sessionList) {
				sess.sendMessage(new TextMessage(user + message.getPayload()));
			}
		}
		
		@Override
		public void afterConnectionClosed(WebSocketSession session, CloseStatus status) throws Exception {
			sessionList.remove(session);
			logger.info("{} 연결끊김", session.getId());
		}
}
